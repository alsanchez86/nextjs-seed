swagger: '2.0'
info:
  description: REST API Personal information
  version: 1.0.0-SNAPSHOT
  title: Information about a candidate's personal data
host: 'localhost:8080'
basePath: /
tags:
  - name: Person
    description: Default Person Controller
paths:
  '/people/{id-candidate}':
    put:
      tags:
        - Person
      summary: Create or modify a person if it already exists
      description: 'This operation will soon be divided into two: create and update'
      operationId: upsertUsingPUT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: personResource
          description: personResource
          required: true
          schema:
            $ref: '#/definitions/Person'
        - name: id-candidate
          in: path
          description: id-candidate
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResponseEntity'
        '201':
          description: Created
        '400':
          description: BAD_REQUEST
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/profiles/{id-candidate}':
    get:
      tags:
        - Person
      summary: Search for a candidate's personal information.
      description: '"The photo is in base64 format and with rare escaped symbols'
      operationId: getUsingGET
      produces:
        - application/json
      parameters:
        - name: id-candidate
          in: path
          description: id-candidate
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PersonProfile'
        '400':
          description: BAD_REQUEST
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: NOT_FOUND
  /records/:
    get:
      tags:
        - Person
      summary: 'Given a list of internal ids of several candidates (previously obtained from a user''s history), it returns the identification data of a candidate'
      description: The photo is in base64 format and with rare escaped symbols
      operationId: getUsingGET_1
      produces:
        - application/json
      parameters:
        - name: listCandidateId
          in: query
          description: listCandidateId
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/PersonRegistry'
        '204':
          description: NOT_CONTENT
          schema:
            type: array
            items:
              $ref: '#/definitions/PersonRegistry'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /summaries/:
    get:
      tags:
        - Person
      summary: 'Given a string of characters, look for a maximum of ten people who match in name, surname or legal documentation.'
      description: The photo is in base64 format and with rare escaped symbols
      operationId: findByCharacterStringUsingGET
      produces:
        - application/json
      parameters:
        - name: characterString
          in: query
          description: characterString
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/PersonSummary'
        '400':
          description: BAD_REQUEST
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: NOT_FOUND
definitions:
  Birth:
    type: object
    properties:
      birthDate:
        type: string
        format: date-time
        description: Date of birth of a candidate

      placeDate:
        type: string
        description: Birthplace of a candidate

    title: Birth
    description: Data related to the birth of a person
  BirthProfile:
    type: object
    properties:
      birthDate:
        type: string
        format: date-time
        description: Date of birth of a candidate

      placeDate:
        type: string
        description: Birthplace of a candidate

    title: BirthProfile
  CivilStatus:
    type: object
    properties:
      code:
        type: string
        description: Civil Status Code

      name:
        type: string
        description: Name of a marital status

    title: CivilStatus
    description: Marital status of a person.
  CivilStatusProfile:
    type: object
    properties:
      code:
        type: string
        description: Code of the civil situation. Each name is associated with a code.

      name:
        type: string
        description: 'Name of the civil situation: Single, Married ...'

    title: CivilStatusProfile
  Country:
    type: object
    properties:
      code:
        type: string
        description: Country code

      name:
        type: string
        description: Country name

    title: Country
    description: country
  Disability:
    type: object
    properties:
      disabilityLevel:
        description: Disability level

        $ref: '#/definitions/DisabilityLevel'
      percentage:
        type: number
        format: float
        description: Disability percentage

    title: Disability
    description: Data of a person's disability
  DisabilityLevel:
    type: object
    properties:
      code:
        type: string
        description: Disability Level Code

      name:
        type: string
        description: Name of disability level

    title: DisabilityLevel
    description: Indicates the level of disability of a person
  Documentation:
    type: object
    properties:
      documentationType:
        description: Type of documentation

        $ref: '#/definitions/DocumentationType'
      value:
        type: string
        description: Value of legal documentation

    title: Documentation
    description: Plaintiff's legal documentation
  DocumentationProfile:
    type: object
    properties:
      code:
        type: string
        description: 'Code of a legal document. For example: DNI, NIE ...'

      value:
        type: string
        description: 'Value of that legal document. For example, a DNI could have the value: 41304375D'

    title: DocumentationProfile
  DocumentationSummary:
    type: object
    properties:
      code:
        type: string
        description: 'Code of a legal document. For example: DNI, NIE ...'

      value:
        type: string
        description: 'Value of that legal document. For example, a DNI could have the value: 41304375D'

    title: DocumentationSummary
  DocumentationType:
    type: object
    properties:
      code:
        type: string
        description: Resource Type Code

    title: DocumentationType
    description: Type of documentation
  FamilyName:
    type: object
    properties:
      name:
        type: string
        description: Surname Name

      order:
        type: integer
        format: int32
        description: Order within last name

    title: FamilyName
    description: Surname of a person
  Gender:
    type: object
    properties:
      code:
        type: string
        description: Gender code

      name:
        type: string
        description: Gender name

    title: Gender
    description: Gender of a person
  Name:
    type: object
    properties:
      familyName:
        type: array
        description: Surname of a person

        items:
          $ref: '#/definitions/FamilyName'
      givenName:
        type: string
        description: First name of a person

      middleName:
        type: string
        description: Second person's first name

      salutationType:
        description: Treatment of a person

        $ref: '#/definitions/SalutationType'
    title: Name
  NameProfile:
    type: object
    properties:
      familyName:
        type: array
        description: Surname of a person.

        items:
          type: string
      givenName:
        type: string
        description: First name of a person

    title: NameProfile
  NameSummary:
    type: object
    properties:
      familyName:
        type: array
        description: Surname of a person.

        items:
          type: string
      givenName:
        type: string
        description: First name of a person

    title: NameSummary
  Nationality:
    type: object
    properties:
      code:
        type: string
        description: Nationality Code

      name:
        type: string
        description: Nationality Name

    title: Nationality
  NationalityProfile:
    type: object
    properties:
      code:
        type: string
        description: Code that is associated with a specific nationality. Each nationality has its own code.

      name:
        type: string
        description: 'Nationality of a candidate. For example: Spanish, Portuguese'

    title: NationalityProfile
  Person:
    type: object
    properties:
      birth:
        description: Birth data of the person

        $ref: '#/definitions/Birth'
      civilStatus:
        description: Civil status of the person

        $ref: '#/definitions/CivilStatus'
      disability:
        description: Disability of the person

        $ref: '#/definitions/Disability'
      gender:
        description: Gender of the person

        $ref: '#/definitions/Gender'
      legalDocumentation:
        type: array
        description: Legal documentation of the person

        items:
          $ref: '#/definitions/Documentation'
      name:
        description: Name of individual

        $ref: '#/definitions/Name'
      nationality:
        type: array
        description: Nationality of the person

        items:
          $ref: '#/definitions/Nationality'
      photo:
        type: string
        description: Photo of the person

      residenceCountry:
        description: Country of residence of the person

        $ref: '#/definitions/Country'
    title: Person
  PersonProfile:
    type: object
    properties:
      birth:
        description: Complete birth data of a candidate

        $ref: '#/definitions/BirthProfile'
      civilStatus:
        description: Marital status of a candidate

        $ref: '#/definitions/CivilStatusProfile'
      idCandidate:
        type: string
        description: Candidate Identifier

      legalDocumentation:
        type: array
        description: Legal documents of a candidate

        items:
          $ref: '#/definitions/DocumentationProfile'
      name:
        description: Full name of a candidate

        $ref: '#/definitions/NameProfile'
      nationality:
        type: array
        description: Nationality of a candidate

        items:
          $ref: '#/definitions/NationalityProfile'
      photo:
        type: string
        description: Avatar of a candidate

    title: PersonProfile
    description: A person profile is the most relevant details of a candidate
  PersonRegistry:
    type: object
    properties:
      familyName:
        type: array
        description: Surname of a person.

        items:
          type: string
      givenName:
        type: string
        description: First name of a person

      idCandidate:
        type: string
        description: Candidate Identifier

      photo:
        type: string
        description: Avatar of a candidate

    title: PersonRegistry
    description: A personregistry is a type of data that contains the data of a person very summarized
  PersonSummary:
    type: object
    properties:
      idCandidate:
        type: string
        description: Candidate Identifier

      legalDocumentation:
        type: array
        description: Legal documents of a candidate

        items:
          $ref: '#/definitions/DocumentationSummary'
      name:
        description: Full name of a candidate

        $ref: '#/definitions/NameSummary'
      photo:
        type: string
        description: Avatar of a candidate

    title: PersonSummary
    description: A personsummary is a type of data that contains the data of a person very summarized
  ResponseEntity:
    type: object
    properties:
      body:
        type: object
      statusCode:
        type: string
        enum:
          - '100'
          - '101'
          - '102'
          - '103'
          - '200'
          - '201'
          - '202'
          - '203'
          - '204'
          - '205'
          - '206'
          - '207'
          - '208'
          - '226'
          - '300'
          - '301'
          - '302'
          - '303'
          - '304'
          - '305'
          - '307'
          - '308'
          - '400'
          - '401'
          - '402'
          - '403'
          - '404'
          - '405'
          - '406'
          - '407'
          - '408'
          - '409'
          - '410'
          - '411'
          - '412'
          - '413'
          - '414'
          - '415'
          - '416'
          - '417'
          - '418'
          - '419'
          - '420'
          - '421'
          - '422'
          - '423'
          - '424'
          - '426'
          - '428'
          - '429'
          - '431'
          - '451'
          - '500'
          - '501'
          - '502'
          - '503'
          - '504'
          - '505'
          - '506'
          - '507'
          - '508'
          - '509'
          - '510'
          - '511'
      statusCodeValue:
        type: integer
        format: int32
    title: ResponseEntity
  SalutationType:
    type: object
    properties:
      abbreviation:
        type: string
        description: Abbreviation of that treatment

      code:
        type: string
        description: Treatment Code

      name:
        type: string
        description: Name of that treatment

    title: SalutationType
    description: Type of treatment of a person
